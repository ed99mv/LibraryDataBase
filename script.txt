-- database: c:\Library_DataBase\LibraryDataBase\library_DB.sqlite3

-- Use the ▷ button in the top right corner to run the entire file.

-- CREACION DE TABLA BOOKS
CREATE TABLE Books (
    Book_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    Name VARCHAR(30) NOT NULL,
    Author_ID INTEGER NOT NULL,
    GenreBook_ID INTEGER NOT NULL,
    Inventory_ID INTEGER NOT NULL,
    Description VARCHAR(100) NOT NULL,
    ISBN VARCHAR(100) NOT NULL,
    Publication_date DATE NOT NULL,
    Rental_Amount DECIMAL NOT NULL,
    Number_Copies INTEGER NOT NULL,
    State VARCHAR(10),
    FOREIGN KEY (GenreBook_ID) REFERENCES Genre (GenreBook_ID),
    FOREIGN KEY (Author_ID) REFERENCES Author (Author_ID),
    FOREIGN KEY (Inventory_ID) REFERENCES Inventory (Inventory_ID)
);

select * from Books;
-----------------------------------------
--CREACION DE TABLA SHOPPING_CART
CREATE TABLE Shopping_Cart(
    Shopping_Cart_ID INTEGER NOT NULL PRIMARY KEY,
    User_ID INTEGER NOT NULL,
    Rental_Time_ID INTEGER NOT NULL,
    Payment_Amount DECIMAL NOT NULL,
    Loan_Date DATETIME NOT NULL,
    Return_Date DATETIME NOT NULL,
    Late_Amount DECIMAL NOT NULL,
    Transaction_Numer VARCHAR(20) NOT NULL,
    State VARCHAR(15),
    FOREIGN KEY (User_ID) REFERENCES Users (User_ID),
    FOREIGN KEY (Rental_Time_ID) REFERENCES Rental_Time (Rental_Time_ID)
);

select * from Shopping_Cart;
------------------------------------------
--CREACIÓN DE TABLA GenreBook
CREATE TABLE GenreBook(
    GenreBook_ID INTEGER NOT NULL PRIMARY KEY,
    Book_ID INTEGER NOT NULL,
    Genre_ID INTEGER NOT NULL,
    FOREIGN KEY (Book_ID) REFERENCES Books (Book_ID),
    FOREIGN KEY (Genre_ID) REFERENCES Genre (Genre_ID)
);
-------------------------------------------
--CREACIÓN DE TABLA Genre
CREATE TABLE Genre(
    Genre_ID INTEGER NOT NULL PRIMARY KEY,
    Description VARCHAR(40) NOT NULL
);
--------------------------------------------
--CREACIÓN DE TABLA Inventory
CREATE TABLE Inventory(
    Inventory_ID INTEGER NOT NULL PRIMARY KEY,
    Quantity_avaible INTEGER NOT NULL,
    Already_rentad INTEGER NOT NULL
);
--------------------------------------------
--CREACIÓN DE TABLA AUTHOR
CREATE TABLE Author(
    Author_ID INTEGER NOT NULL PRIMARY KEY,
    Name VARCHAR(30) NOT NULL,
    Description VARCHAR(100)
);
-----------------------------------------------------
--CREACIÓN DE TABLA Payment_Method
CREATE TABLE Payment_Method(
    Payment_Method_ID INTEGER NOT NULL PRIMARY KEY,
    User_ID INTEGER NOT NULL,
    Description VARCHAR(100) NOT NULL,
    State VARCHAR(20) NOT NULL,
    FOREIGN KEY (User_ID) REFERENCES Users (User_ID)
);
-----------------------------------------------------
--CREACIÓN DE TABLA USER
CREATE TABLE Users(
    User_ID INTEGER NOT NULL PRIMARY KEY,
    User_Type_ID INTEGER NOT NULL,
    Name VARCHAR(30) NOT NULL, 
    Email VARCHAR(40) NOT NULL,
    Password VARCHAR(10) NOT NULL,
    Phone INTEGER NOT NULL,
    State VARCHAR(10) NOT NULL,
    FOREIGN KEY (User_Type_ID) REFERENCES User_Type (User_Type_ID)
);
------------------------------------------------------
--CREACIÓN DE TABLA Rental_Time
CREATE TABLE Rental_Time(
    Rental_Time_ID INTEGER NOT NULL PRIMARY KEY,
    Description VARCHAR(100) NOT NULL,
    State VARCHAR(10) NOT NULL
);
-------------------------------------------------------
--CREACIÓN DE TABLA User_Type
CREATE TABLE User_Type(
    User_Type_ID INTEGER NOT NULL PRIMARY KEY,
    Description VARCHAR(100) NOT NULL,
    State VARCHAR(10)
);
--------------------------------------------------------
--CREACIÓN DE TABLA Reviews
CREATE TABLE Reviews( Rent_ID
    Reviews_ID INTEGER NOT NULL PRIMARY KEY,
    Book_ID INTEGER NOT NULL,
    User_ID INTEGER NOT NULL,
    Comment_date VARCHAR(100) NOT NULL,
    Score INTEGER NOT NULL,
    Comment VARCHAR(1000) NOT NULL,
    FOREIGN KEY (Book_ID) REFERENCES Books (Book_ID),
    FOREIGN KEY (User_ID) REFERENCES Users (User_ID)
);
--------------------------------------------------------
SELECT * FROM Books;
DROP TABLE Books